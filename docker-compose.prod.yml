version: '3.1'

services:
  client:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        PORT: ${FRONTEND_PORT}
    container_name: tm_client
    restart: always
    environment:
      VITE_URL_API: ${API_URL}
      VIRTUAL_HOST: ${VIRTUAL_HOST_FRONT}
    expose:
      - '${FRONTEND_PORT}'

  api:
    build:
      context: api
      dockerfile: Dockerfile
      args:
        PORT: ${API_PORT}
    container_name: tm_api
    expose:
      - '${API_PORT}'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_PROD_HOST}
      FRONTEND_URL: ${FRONTEND_URL}
      API_PORT: ${API_PORT}
      VIRTUAL_HOST: ${VIRTUAL_HOST_API}
    restart: always
    depends_on:
      - db

  db:
    image: postgres
    container_name: tm_db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

networks: 
  default: 
    external:
      name: nginx-proxy


