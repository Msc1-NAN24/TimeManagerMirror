version: '3.1'

services:
  front:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        PORT: ${FRONTEND_PORT}
    container_name: tm_web
    environment:
      VITE_PORT_API: ${API_PORT}
      VITE_URL_API: ${API_URL}
      VIRTUAL_HOST: "time-manager.tech"
      VIRTUAL_PORT: 4500
    expose:
      - 4500

  api:
    build:
      context: api
      dockerfile: Dockerfile
      args:
        PORT: ${API_PORT}
    container_name: tm_api
    expose:
      - 4000
    environment:
      VIRTUAL_HOST: "time-manager.tech/api"
      VIRTUAL_PORT: 4000
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_PROD_HOST}
      FRONTEND_URL: ${FRONTEND_URL}
      API_PORT: ${API_PORT}
    depends_on:
      - db


  db:
    image: postgres
    container_name: tm_db
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

  adminer:
    image: adminer
    container_name: tm_adminer
    restart: always
    ports:
      - '8080:8080'

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
    - front
